/*
 * File: ThisImpl.java
 *
 * $Id: ThisImpl.java,v 1.13 2000/11/20 01:51:09 bokowski Exp $
 *
 * This file is part of Barat.
 * Copyright (c) 1998-2000 Boris Bokowski (bokowski@users.sourceforge.net)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 *   Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 *   Neither the name of Boris Bokowski nor the names of his contributors
 *   may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BORIS BOKOWSKI
 * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package barat.parser;

/* generated by Boris Bokowski's rosegen on Sat Jul 11 18:34:32 GMT+03:30 1998
*/

import barat.reflect.This;
import barat.reflect.AUserType;


public class ThisImpl extends AExpressionImpl implements This
{
	private Attribute<AUserType> thisClass;
        private boolean isSuper = false;
	public ThisImpl( )
	{
		super( );
	}
	public ThisImpl( Attribute<AUserType> thisClass_, boolean isSuper_)
	{
		super( );
		thisClass = thisClass_;
                isSuper = isSuper_;
	}
	public void setThisClass( Attribute<AUserType> thisClass_ )
	{
		thisClass = thisClass_;
	}
	public AUserType getThisClass()
	{
		return thisClass.value();
	}
        public boolean isSuper()
        {
          return isSuper;
        }
        public void isSuper(boolean isSuper_)
        {
          isSuper = isSuper_;
        }
	public void accept(barat.Visitor v)
	{
		v.visitThis(this);
	}
	public void accept(barat.parser.ImplementationVisitor v)
	{
		v.visitThisImpl(this);
	}
  //public int hashCode() { return getThisClass().hashCode(); }

  public boolean equals(Object o) {
    return (o instanceof This)?
      ((This)o).getThisClass().equals(getThisClass()) : false;
  }
}
