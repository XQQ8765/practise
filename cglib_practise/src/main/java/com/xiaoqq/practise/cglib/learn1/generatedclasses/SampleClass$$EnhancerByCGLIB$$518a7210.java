package com.xiaoqq.practise.cglib.learn1.generatedclasses;

import java.lang.reflect.Method;

import com.xiaoqq.practise.cglib.learn1.SampleClass;
import net.sf.cglib.proxy.*;

/**
 * Class generated by Cglib for testcase: SampleClassTest.testInvocationHandler()
 */
public class SampleClass$$EnhancerByCGLIB$$518a7210
        extends SampleClass
        implements Factory {
    private boolean CGLIB$BOUND;
    private static ThreadLocal CGLIB$THREAD_CALLBACKS;
    private static Callback[] CGLIB$STATIC_CALLBACKS;
    private InvocationHandler CGLIB$CALLBACK_0;
    private static Method CGLIB$test$0;
    private static Method CGLIB$finalize$1;
    private static Method CGLIB$equals$2;
    private static Method CGLIB$toString$3;
    private static Method CGLIB$hashCode$4;
    private static Method CGLIB$clone$5;

    static void CGLIB$STATICHOOK1() {
        CGLIB$THREAD_CALLBACKS = new ThreadLocal();
        try {
            CGLIB$test$0 = Class.forName("learn1.SampleClass").getDeclaredMethod("test", new Class[]{Class.forName("java.lang.String")});
            CGLIB$finalize$1 = Class.forName("java.lang.Object").getDeclaredMethod("finalize", new Class[0]);
            CGLIB$equals$2 = Class.forName("java.lang.Object").getDeclaredMethod("equals", new Class[]{Class.forName("java.lang.Object")});
            CGLIB$toString$3 = Class.forName("java.lang.Object").getDeclaredMethod("toString", new Class[0]);
            CGLIB$hashCode$4 = Class.forName("java.lang.Object").getDeclaredMethod("hashCode", new Class[0]);
            CGLIB$clone$5 = Class.forName("java.lang.Object").getDeclaredMethod("clone", new Class[0]);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (NoSuchMethodException e) {
            e.printStackTrace();
        }
    }

    public final String test(String paramString) {
        try {
            InvocationHandler tmp4_1 = this.CGLIB$CALLBACK_0;
            if (tmp4_1 == null) {
                CGLIB$BIND_CALLBACKS(this);
            }
            return (String) this.CGLIB$CALLBACK_0.invoke(this, CGLIB$test$0, new Object[]{paramString});
        } catch (RuntimeException | Error localRuntimeException) {
            throw localRuntimeException;
        } catch (Throwable localThrowable) {
            throw new UndeclaredThrowableException(localThrowable);
        }
    }

    protected final void finalize()
            throws Throwable {
        InvocationHandler tmp4_1 = this.CGLIB$CALLBACK_0;
        if (tmp4_1 == null) {
            CGLIB$BIND_CALLBACKS(this);
        }
    }

    public final boolean equals(Object paramObject) {
        try {
            InvocationHandler tmp4_1 = this.CGLIB$CALLBACK_0;
            if (tmp4_1 == null) {
                CGLIB$BIND_CALLBACKS(this);
            }
            return ((Boolean) this.CGLIB$CALLBACK_0.invoke(this, CGLIB$equals$2, new Object[]{paramObject})).booleanValue();
        } catch (RuntimeException | Error localRuntimeException) {
            throw localRuntimeException;
        } catch (Throwable localThrowable) {
            throw new UndeclaredThrowableException(localThrowable);
        }
    }

    public final String toString() {
        try {
            InvocationHandler tmp4_1 = this.CGLIB$CALLBACK_0;
            if (tmp4_1 == null) {
                CGLIB$BIND_CALLBACKS(this);
            }
            return (String) this.CGLIB$CALLBACK_0.invoke(this, CGLIB$toString$3, new Object[0]);
        } catch (RuntimeException | Error localRuntimeException) {
            throw localRuntimeException;
        } catch (Throwable localThrowable) {
            throw new UndeclaredThrowableException(localThrowable);
        }
    }

    public final int hashCode() {
        try {
            InvocationHandler tmp4_1 = this.CGLIB$CALLBACK_0;
            if (tmp4_1 == null) {
                CGLIB$BIND_CALLBACKS(this);
            }
            return ((Number) this.CGLIB$CALLBACK_0.invoke(this, CGLIB$hashCode$4, new Object[0])).intValue();
        } catch (RuntimeException | Error localRuntimeException) {
            throw localRuntimeException;
        } catch (Throwable localThrowable) {
            throw new UndeclaredThrowableException(localThrowable);
        }
    }

    protected final Object clone()
            throws CloneNotSupportedException {
        try {
            InvocationHandler tmp4_1 = this.CGLIB$CALLBACK_0;
            if (tmp4_1 == null) {
                CGLIB$BIND_CALLBACKS(this);
            }
            return this.CGLIB$CALLBACK_0.invoke(this, CGLIB$clone$5, new Object[0]);
        } catch (RuntimeException | Error | CloneNotSupportedException localRuntimeException) {
            throw localRuntimeException;
        } catch (Throwable localThrowable) {
            throw new UndeclaredThrowableException(localThrowable);
        }
    }

    public SampleClass$$EnhancerByCGLIB$$518a7210() {
        CGLIB$BIND_CALLBACKS(this);
    }

    public static void CGLIB$SET_THREAD_CALLBACKS(Callback[] paramArrayOfCallback) {
        CGLIB$THREAD_CALLBACKS.set(paramArrayOfCallback);
    }

    public static void CGLIB$SET_STATIC_CALLBACKS(Callback[] paramArrayOfCallback) {
        CGLIB$STATIC_CALLBACKS = paramArrayOfCallback;
    }

    private static final void CGLIB$BIND_CALLBACKS(Object paramObject) {
        SampleClass$$EnhancerByCGLIB$$518a7210 local518a7210 = (SampleClass$$EnhancerByCGLIB$$518a7210) paramObject;
        if (!local518a7210.CGLIB$BOUND) {
            local518a7210.CGLIB$BOUND = true;
            Object tmp23_20 = CGLIB$THREAD_CALLBACKS.get();
            if (tmp23_20 == null) {
                return;
            }
            local518a7210.CGLIB$CALLBACK_0 = (InvocationHandler) tmp23_20;
        }
    }

    @Override
    public Object newInstance(Callback callback) {
        Callback[] callbacks = new Callback[]{};
        callbacks[0] = callback;
        CGLIB$SET_THREAD_CALLBACKS(callbacks);
        SampleClass$$EnhancerByCGLIB$$518a7210 proxy = new SampleClass$$EnhancerByCGLIB$$518a7210();
        CGLIB$SET_THREAD_CALLBACKS(null);
        return proxy;
    }

    @Override
    public Object newInstance(Callback[] callbacks) {
        CGLIB$SET_THREAD_CALLBACKS(callbacks);
        SampleClass$$EnhancerByCGLIB$$518a7210 proxy = new SampleClass$$EnhancerByCGLIB$$518a7210();
        CGLIB$SET_THREAD_CALLBACKS(null);
        return proxy;
    }

    @Override
    public Object newInstance(Class[] clazzes, Object[] args, Callback[] callbacks) {
        CGLIB$SET_THREAD_CALLBACKS(callbacks);
        SampleClass$$EnhancerByCGLIB$$518a7210 proxy;
        for (Class clazz : clazzes) {
            proxy = new SampleClass$$EnhancerByCGLIB$$518a7210();
            CGLIB$SET_THREAD_CALLBACKS(null);
            return proxy;
        }
        return null;
    }

    @Override
    public Callback getCallback(int index) {
        CGLIB$BIND_CALLBACKS(this);
        return CGLIB$CALLBACK_0;
    }

    @Override
    public void setCallback(int index, Callback callback) {
        CGLIB$CALLBACK_0 = (InvocationHandler) callback;
    }

    @Override
    public void setCallbacks(Callback[] callbacks) {
        CGLIB$CALLBACK_0 = (InvocationHandler) callbacks[0];
    }

    @Override
    public Callback[] getCallbacks() {
        CGLIB$BIND_CALLBACKS(this);
        Callback[] callbacks = new Callback[]{};
        callbacks[0] = CGLIB$CALLBACK_0;
        return callbacks;
    }
}
